{"mappings":"YAAA,IAAMA,EAAO,CACXC,eAAgBC,SAASC,cAAc,6BACvCC,WAAYF,SAASC,cAAc,gBACnCE,SAAUH,SAASC,cAAc,eAGnCH,EAAKC,eAAeK,iBAAiB,SAErC,SAAoBC,GACdA,EAAEC,SAAWR,EAAKI,YACpBG,EAAEC,OAAOC,UAAUC,IAAI,+BACvBV,EAAKK,SAASI,UAAUE,OAAO,+BAE/BJ,EAAEC,OAAOI,UAAW,EACpBZ,EAAKK,SAASO,UAAW,GAChBL,EAAEC,SAAWR,EAAKK,WAC3BE,EAAEC,OAAOC,UAAUC,IAAI,+BACvBV,EAAKI,WAAWK,UAAUE,OAAO,+BAEjCJ,EAAEC,OAAOI,UAAW,EACpBZ,EAAKI,WAAWQ,UAAW,E,ICpBXV,SAASC,cAAc,YAA3C,IAMIU,EALEC,EAAoBZ,SAASa,eAAe,cAC5CC,EAAYd,SAASC,cAAc,eACnCc,EAAaf,SAASC,cAAc,gBAEtCe,GADiBhB,SAASC,cAAc,mBAC1B,GAuLlB,SAASgB,EAAgBC,GACH,IAAhBF,EACFF,EAAUP,UAAUC,IAAI,kBAExBM,EAAUP,UAAUE,OAAO,kBAGzBO,IAAgBE,EAClBH,EAAWR,UAAUC,IAAI,kBAEzBO,EAAWR,UAAUE,OAAO,iB,CAzLhCK,EAAUK,MAAMC,WAAa,SAC7BL,EAAWI,MAAMC,WAAa,SAmK9BR,EAAkBR,iBAAiB,SAEnC,SAAuCC,GACrC,GAAwB,UAApBA,EAAEC,OAAOe,QACX,OAEAJ,EAAgBN,E","sources":["src/js/button.js","src/js/pagination.js"],"sourcesContent":["const refs = {\n  btnListLibrary: document.querySelector('.header-library__btn-list'),\n  watchedBtn: document.querySelector('#watched-btn'),\n  queueBtn: document.querySelector('#queue-btn'),\n};\n\nrefs.btnListLibrary.addEventListener('click', onClickBtn);\n\nfunction onClickBtn(e) {\n  if (e.target === refs.watchedBtn) {\n    e.target.classList.add('header-library__btn--active');\n    refs.queueBtn.classList.remove('header-library__btn--active');\n\n    e.target.disabled = true;\n    refs.queueBtn.disabled = false;\n  } else if (e.target === refs.queueBtn) {\n    e.target.classList.add('header-library__btn--active');\n    refs.watchedBtn.classList.remove('header-library__btn--active');\n\n    e.target.disabled = true;\n    refs.watchedBtn.disabled = false;\n  }\n}\n","const listElement = document.querySelector('.js-card');\nconst paginationElement = document.getElementById('pagination');\nconst arrowLeft = document.querySelector('.arrow_left');\nconst arrowRight = document.querySelector('.arrow_right');\nconst warningField = document.querySelector('.header-warning');\nlet currentPage = 1;\nlet pageCount;\nconst pagesOnWindow = 5;\nlet rows = 20;\n\nfunction resetCurrentPage() {\n  currentPage = 1;\n}\narrowLeft.style.visibility = 'hidden';\narrowRight.style.visibility = 'hidden';\n// головна функція для рендера pagination. Callback - функція для роботи fetch (залежить від розділу, де рендеремо pagination)\nexport function renderPagination(totalPages, listItems, callback, searchQuery) {\n  paginationElement.innerHTML = '';\n  arrowLeft.style.visibility = 'visible';\n  arrowRight.style.visibility = 'visible';\n  resetCurrentPage();\n  arrowLeft.removeEventListener('click', onArrowLeftClick);\n  arrowRight.removeEventListener('click', onArrowRightClick);\n\n  function setupPagination(items, wrapper, rowsPerPage) {\n    wrapper.innerHTML = '';\n\n    pageCount = totalPages;\n    let maxLeftPage = currentPage - Math.floor(pagesOnWindow / 2);\n    let maxRightPage = currentPage + Math.floor(pagesOnWindow / 2);\n\n    if (maxLeftPage < 1) {\n      maxLeftPage = 1;\n      maxRightPage = pagesOnWindow;\n    }\n\n    if (maxRightPage > totalPages) {\n      maxLeftPage = totalPages - (pagesOnWindow - 1);\n\n      if (maxLeftPage < 1) {\n        maxLeftPage = 1;\n      }\n      maxRightPage = totalPages;\n    }\n\n    for (let i = 1; i <= totalPages; i++) {\n      if (maxLeftPage !== 1 && i == 1) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      if (maxRightPage !== totalPages && i == totalPages) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      if (i >= maxLeftPage && i <= maxRightPage) {\n        let btn = paginationButton(i, items);\n        wrapper.appendChild(btn);\n      }\n\n      // додає трикрапки в pagination в залежності від поточної сторінки та кількості сторінок\n      if (\n        totalPages >= 6 &&\n        i == 1 &&\n        currentPage !== 1 &&\n        currentPage !== 2 &&\n        currentPage !== 3\n      ) {\n        const threeDotsEl = addThreeDotsBlock();\n        wrapper.insertBefore(threeDotsEl, wrapper[wrapper.length - 2]);\n      }\n\n      if (\n        pageCount >= 7 &&\n        i == pageCount - 1 &&\n        currentPage !== pageCount &&\n        currentPage !== pageCount - 2 &&\n        currentPage !== pageCount - 1\n      ) {\n        const threeDotsEl = addThreeDotsBlock();\n        wrapper.insertBefore(threeDotsEl, wrapper[1]);\n      }\n    }\n  }\n\n  // створює трикрапки pagination\n  function addThreeDotsBlock() {\n    const threeDots = document.createElement('div');\n    threeDots.classList.add('threeDots');\n    threeDots.innerText = '...';\n    return threeDots;\n  }\n\n  function paginationButton(page, items) {\n    let button = document.createElement('button');\n    button.innerText = page;\n\n    if (currentPage == page) button.classList.add('active');\n\n    button.addEventListener('click', function () {\n      warningField.textContent = ``;\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage = page;\n      callback(listElement, currentPage, searchQuery);\n\n      let current_btn = document.querySelector('.pagenumbers button.active');\n      current_btn.classList.remove('active');\n\n      button.classList.add('active');\n      setupPagination(listItems, paginationElement, rows);\n      hideExtremeButtons(totalPages);\n    });\n\n    return button;\n  }\n\n  // ф-ціядля прослуховування кліків по стрілках вліво\n  function onArrowLeftClick() {\n    if (currentPage > 1) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage--;\n      setupPagination(listItems, paginationElement, rows);\n      callback(listElement, currentPage, searchQuery);\n    }\n\n    disableArrowBtn(totalPages);\n    hideExtremeButtons(totalPages);\n  }\n\n  // ф-ціядля прослуховування кліків по стрілках вправо\n  function onArrowRightClick() {\n    if (currentPage < totalPages) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      currentPage++;\n      setupPagination(listItems, paginationElement, rows);\n      callback(listElement, currentPage, searchQuery);\n    }\n    disableArrowBtn(totalPages);\n    hideExtremeButtons(totalPages);\n  }\n\n  setupPagination(listItems, paginationElement, rows);\n  arrowLeft.onclick = onArrowLeftClick;\n  arrowRight.onclick = onArrowRightClick;\n\n  hideExtremeButtons(totalPages);\n  disableArrowBtn(totalPages);\n}\n\n// ховає першу та остатню сторінку по боках мобільної версії з маленьким екраном\nfunction hideExtremeButtons(totalPages) {\n  try {\n    if (\n      /Android|webOS|iPhone|iPad|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      )\n    ) {\n      // код для мобильных устройств\n      const allPaginationBtns = document.querySelectorAll('#pagination button');\n      if (currentPage > 3) {\n        allPaginationBtns[0].classList.add('hide');\n      } else {\n        allPaginationBtns[0].classList.remove('hide');\n      }\n\n      if (currentPage < totalPages - 3) {\n        allPaginationBtns[allPaginationBtns.length - 1].classList.add('hide');\n      } else {\n        allPaginationBtns[allPaginationBtns.length - 1].classList.remove(\n          'hide'\n        );\n      }\n    }\n  } catch (error) {}\n}\n\npaginationElement.addEventListener('click', disableArrowBtnAfterPageClick);\n\nfunction disableArrowBtnAfterPageClick(e) {\n  if (e.target.tagName != 'BUTTON') {\n    return;\n  } else {\n    disableArrowBtn(pageCount);\n  }\n}\n\n// робить неактивні кнопки- стрілки на першій чи остатній сторінці\nfunction disableArrowBtn(totalPages) {\n  if (currentPage === 1) {\n    arrowLeft.classList.add('disabled-arrow');\n  } else {\n    arrowLeft.classList.remove('disabled-arrow');\n  }\n\n  if (currentPage === totalPages) {\n    arrowRight.classList.add('disabled-arrow');\n  } else {\n    arrowRight.classList.remove('disabled-arrow');\n  }\n}\nconst markup = `<div class=\"sk-chase\">\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n  </div>`;\n\nfunction fetchDataOfPopularFilms() {\n  newApiService\n    .fetchPopularArticlesPages()\n    .then(results => {\n      renderPagination(results.total_pages, results.results, displayList);\n    })\n    .catch(err => {\n      console.log('error in function fetchDataOfPopularFilms');\n      listElement.innerHTML = `<img class=\"catch-error-pagination\" src=\"${errorUrl}\" />`;\n    });\n}\n\n// fetches popular movies by appropriate page\nfunction fetchPopularFilmsByPage(page) {\n  newApiService.pageNum = page;\n  return newApiService.insertGenresToMovieObj();\n}\n"],"names":["$a961b5025052e4af$var$refs","btnListLibrary","document","querySelector","watchedBtn","queueBtn","addEventListener","e","target","classList","add","remove","disabled","$dfaf77c789ce7a24$var$pageCount","$dfaf77c789ce7a24$var$paginationElement","getElementById","$dfaf77c789ce7a24$var$arrowLeft","$dfaf77c789ce7a24$var$arrowRight","$dfaf77c789ce7a24$var$currentPage","$dfaf77c789ce7a24$var$disableArrowBtn","totalPages","style","visibility","tagName"],"version":3,"file":"library.b065801d.js.map"}